#include <iostream>
using namespace std;

int main()
{
    /*
        # Common Numbers :-
     
        0  = 0000   = 000 = 00 = 0 as like 00025 = 0025 = 025 = 25 
        1  = 0001
        2  = 0010
        3  = 0011
        4  = 0100
        5  = 0101
        6  = 0110
        7  = 0111
        8  = 1000
        9  = 1001
        10 = 1010

        
        
        
        
        # Logic:-

        ..... _____ _____ _____ _____ _____ _____ _____ _____   
        ..... (2^7) (2^6) (2^5) (2^4) (2^3) (2^2) (2^1) (2^0)

        ..... _____ _____ _____ _____ _____ _____ _____ _____   
        ..... (128) (64)  (32)  (16)   (8)   (4)   (2)   (1)




        e.g. 25

        ..... _____ _____ _____ _____ _____ _____ _____ _____   
        ..... (128) (64)  (32)  (16)   (8)   (4)   (2)   (1)
        .....   X     X     X

        we will add those numbers wich will give a sum of 25
        so 32, 64 and 128 will not be considered

        _____ _____ _____ _____ _____   
        (16)   (8)   (4)   (2)   (1)
        -------------------------------->

        __1__ _____ _____ _____ _____  = 25 - 16 = 9   
        (16)   (8)   (4)   (2)   (1)

        __1__ __1__ _____ _____ _____  = 9 - 8 = 1 
        (16)   (8)   (4)   (2)   (1)

        __1__ __1__ __0__ __0__ __1__  = 1 - 1 = 0  
        (16)   (8)   (4)   (2)   (1)

        we do not need 4 and 2 because they will increase the sum

        ANSWER = 11001







        e.g. 36

        ..... _____ _____ _____ _____ _____ _____ _____ _____   
        ..... (128) (64)  (32)  (16)   (8)   (4)   (2)   (1)
        .....   X     X    

        _____ _____ _____ _____ _____ _____   
        (32)  (16)   (8)   (4)   (2)   (1)
        -------------------------------->

        __1__ _____ _____ _____ _____ _____  = 36 - 32 = 4 
        (32)  (16)   (8)   (4)   (2)   (1)

        __1__ __0__ __0__ __1__ _____ _____  = 4 - 4 = 0 
        (32)  (16)   (8)   (4)   (2)   (1)

        __1__ __0__ __0__ __1__ __0__ __0__  = 0 - 0 = 0  
        (32)  (16)   (8)   (4)   (2)   (1)

        ANSWER = 100100        





        NOTE:-
        ..... _____ _____ _____ _____ _____ _____   
        ..... (32)  (16)   (8)   (4)   (2)   (1)

        since 1 is the only odd number here so it is obvious 
        for odd number 1 will always be at the end of binary number











        # Binary Addition
        0 + 0 = 0
        0 + 1 = 1
        1 + 0 = 1
        1 + 1 = 10

    */






    return 0;
}